
LAB 2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  00000c8c  00000d00  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c8c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000d1c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d4c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000098  00000000  00000000  00000d8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001010  00000000  00000000  00000e24  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000960  00000000  00000000  00001e34  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000006a9  00000000  00000000  00002794  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000120  00000000  00000000  00002e40  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000481  00000000  00000000  00002f60  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000005fd  00000000  00000000  000033e1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  000039de  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__ctors_end>
   4:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
   8:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
   c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  10:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  14:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  18:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  1c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  20:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  24:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  28:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  2c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  30:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  34:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  38:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  3c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  40:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  44:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  48:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  4c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  50:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  54:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  58:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  5c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  60:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>
  64:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	00 40       	sbci	r16, 0x00	; 0
  6a:	7a 10       	cpse	r7, r10
  6c:	f3 5a       	subi	r31, 0xA3	; 163
  6e:	00 a0       	ldd	r0, Z+32	; 0x20
  70:	72 4e       	sbci	r23, 0xE2	; 226
  72:	18 09       	sbc	r17, r8
  74:	00 10       	cpse	r0, r0
  76:	a5 d4       	rcall	.+2378   	; 0x9c2 <__stack+0xc3>
  78:	e8 00       	.word	0x00e8	; ????
  7a:	00 e8       	ldi	r16, 0x80	; 128
  7c:	76 48       	sbci	r23, 0x86	; 134
  7e:	17 00       	.word	0x0017	; ????
  80:	00 e4       	ldi	r16, 0x40	; 64
  82:	0b 54       	subi	r16, 0x4B	; 75
  84:	02 00       	.word	0x0002	; ????
  86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
  88:	9a 3b       	cpi	r25, 0xBA	; 186
  8a:	00 00       	nop
  8c:	00 e1       	ldi	r16, 0x10	; 16
  8e:	f5 05       	cpc	r31, r5
  90:	00 00       	nop
  92:	80 96       	adiw	r24, 0x20	; 32
  94:	98 00       	.word	0x0098	; ????
  96:	00 00       	nop
  98:	40 42       	sbci	r20, 0x20	; 32
  9a:	0f 00       	.word	0x000f	; ????
  9c:	00 00       	nop
  9e:	a0 86       	std	Z+8, r10	; 0x08
  a0:	01 00       	.word	0x0001	; ????
  a2:	00 00       	nop
  a4:	10 27       	eor	r17, r16
  a6:	00 00       	nop
  a8:	00 00       	nop
  aa:	e8 03       	fmulsu	r22, r16
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	64 00       	.word	0x0064	; ????
  b2:	00 00       	nop
  b4:	00 00       	nop
  b6:	0a 00       	.word	0x000a	; ????
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	01 00       	.word	0x0001	; ????
  be:	00 00       	nop
  c0:	00 00       	nop
  c2:	2c 76       	andi	r18, 0x6C	; 108
  c4:	d8 88       	ldd	r13, Y+16	; 0x10
  c6:	dc 67       	ori	r29, 0x7C	; 124
  c8:	4f 08       	sbc	r4, r15
  ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
  cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
  ce:	ae 59       	subi	r26, 0x9E	; 158
  d0:	e1 b1       	in	r30, 0x01	; 1
  d2:	b7 96       	adiw	r30, 0x27	; 39
  d4:	e5 e3       	ldi	r30, 0x35	; 53
  d6:	e4 53       	subi	r30, 0x34	; 52
  d8:	c6 3a       	cpi	r28, 0xA6	; 166
  da:	e6 51       	subi	r30, 0x16	; 22
  dc:	99 76       	andi	r25, 0x69	; 105
  de:	96 e8       	ldi	r25, 0x86	; 134
  e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <__mulsf3+0x12>
  e2:	84 26       	eor	r8, r20
  e4:	eb 89       	ldd	r30, Y+19	; 0x13
  e6:	8c 9b       	sbis	0x11, 4	; 17
  e8:	62 ed       	ldi	r22, 0xD2	; 210
  ea:	40 7c       	andi	r20, 0xC0	; 192
  ec:	6f fc       	.word	0xfc6f	; ????
  ee:	ef bc       	out	0x2f, r14	; 47
  f0:	9c 9f       	mul	r25, r28
  f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
  f4:	ba a5       	ldd	r27, Y+42	; 0x2a
  f6:	6f a5       	ldd	r22, Y+47	; 0x2f
  f8:	f4 90       	lpm	r15, Z
  fa:	05 5a       	subi	r16, 0xA5	; 165
  fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
  fe:	5c 93       	st	X, r21
 100:	6b 6c       	ori	r22, 0xCB	; 203
 102:	f9 67       	ori	r31, 0x79	; 121
 104:	6d c1       	rjmp	.+730    	; 0x3e0 <main+0x8>
 106:	1b fc       	.word	0xfc1b	; ????
 108:	e0 e4       	ldi	r30, 0x40	; 64
 10a:	0d 47       	sbci	r16, 0x7D	; 125
 10c:	fe f5       	brtc	.+126    	; 0x18c <__bad_interrupt>
 10e:	20 e6       	ldi	r18, 0x60	; 96
 110:	b5 00       	.word	0x00b5	; ????
 112:	d0 ed       	ldi	r29, 0xD0	; 208
 114:	90 2e       	mov	r9, r16
 116:	03 00       	.word	0x0003	; ????
 118:	94 35       	cpi	r25, 0x54	; 84
 11a:	77 05       	cpc	r23, r7
 11c:	00 80       	ld	r0, Z
 11e:	84 1e       	adc	r8, r20
 120:	08 00       	.word	0x0008	; ????
 122:	00 20       	and	r0, r0
 124:	4e 0a       	sbc	r4, r30
 126:	00 00       	nop
 128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
 12a:	0c 33       	cpi	r16, 0x3C	; 60
 12c:	33 33       	cpi	r19, 0x33	; 51
 12e:	33 0f       	add	r19, r19
 130:	98 6e       	ori	r25, 0xE8	; 232
 132:	12 83       	std	Z+2, r17	; 0x02
 134:	11 41       	sbci	r17, 0x11	; 17
 136:	ef 8d       	ldd	r30, Y+31	; 0x1f
 138:	21 14       	cp	r2, r1
 13a:	89 3b       	cpi	r24, 0xB9	; 185
 13c:	e6 55       	subi	r30, 0x56	; 86
 13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
 140:	fe e6       	ldi	r31, 0x6E	; 110
 142:	db 18       	sub	r13, r11
 144:	d1 84       	ldd	r13, Z+9	; 0x09
 146:	4b 38       	cpi	r20, 0x8B	; 139
 148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
 14a:	7c 1d       	adc	r23, r12
 14c:	90 1d       	adc	r25, r0
 14e:	a4 bb       	out	0x14, r26	; 20
 150:	e4 24       	eor	r14, r4
 152:	20 32       	cpi	r18, 0x20	; 32
 154:	84 72       	andi	r24, 0x24	; 36
 156:	5e 22       	and	r5, r30
 158:	81 00       	.word	0x0081	; ????
 15a:	c9 f1       	breq	.+114    	; 0x1ce <LCD_Cmd+0x12>
 15c:	24 ec       	ldi	r18, 0xC4	; 196
 15e:	a1 e5       	ldi	r26, 0x51	; 81
 160:	3d 27       	eor	r19, r29

00000162 <__ctors_end>:
 162:	11 24       	eor	r1, r1
 164:	1f be       	out	0x3f, r1	; 63
 166:	cf ef       	ldi	r28, 0xFF	; 255
 168:	d8 e0       	ldi	r29, 0x08	; 8
 16a:	de bf       	out	0x3e, r29	; 62
 16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_copy_data>:
 16e:	11 e0       	ldi	r17, 0x01	; 1
 170:	a0 e0       	ldi	r26, 0x00	; 0
 172:	b1 e0       	ldi	r27, 0x01	; 1
 174:	ec e8       	ldi	r30, 0x8C	; 140
 176:	fc e0       	ldi	r31, 0x0C	; 12
 178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x10>
 17a:	05 90       	lpm	r0, Z+
 17c:	0d 92       	st	X+, r0
 17e:	ac 31       	cpi	r26, 0x1C	; 28
 180:	b1 07       	cpc	r27, r17
 182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0xc>
 184:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <main>
 188:	0c 94 44 06 	jmp	0xc88	; 0xc88 <_exit>

0000018c <__bad_interrupt>:
 18c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000190 <ADC_Init>:
#include "ADC.h"
#include <avr/io.h>

void ADC_Init() {
	// Configurar ADC
	ADCSRA = (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0); // Enable ADC, prescaler 128
 190:	87 e8       	ldi	r24, 0x87	; 135
 192:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 196:	08 95       	ret

00000198 <ADC_Read>:
}

uint16_t ADC_Read(uint8_t channel) {
	// Seleccionar canal y referencia AVcc
	ADMUX = (1 << REFS0) | (channel & 0x07);
 198:	87 70       	andi	r24, 0x07	; 7
 19a:	80 64       	ori	r24, 0x40	; 64
 19c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	
	// Iniciar conversión
	ADCSRA |= (1 << ADSC);
 1a0:	ea e7       	ldi	r30, 0x7A	; 122
 1a2:	f0 e0       	ldi	r31, 0x00	; 0
 1a4:	80 81       	ld	r24, Z
 1a6:	80 64       	ori	r24, 0x40	; 64
 1a8:	80 83       	st	Z, r24
	
	// Esperar fin de conversión
	while(ADCSRA & (1 << ADSC));
 1aa:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 1ae:	86 fd       	sbrc	r24, 6
 1b0:	fc cf       	rjmp	.-8      	; 0x1aa <ADC_Read+0x12>
	
	return ADC;
 1b2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 1b6:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 1ba:	08 95       	ret

000001bc <LCD_Cmd>:
	_delay_ms(5);
	*/
}

void LCD_Cmd(uint8_t cmd) {
	PORTD = (PORTD & 0x03) | ((cmd & 0xFC) >> 2);
 1bc:	9b b1       	in	r25, 0x0b	; 11
 1be:	28 2f       	mov	r18, r24
 1c0:	26 95       	lsr	r18
 1c2:	26 95       	lsr	r18
 1c4:	93 70       	andi	r25, 0x03	; 3
 1c6:	92 2b       	or	r25, r18
 1c8:	9b b9       	out	0x0b, r25	; 11
	PORTD &= ~(1<<LCD_RS);
 1ca:	9b b1       	in	r25, 0x0b	; 11
 1cc:	9e 7f       	andi	r25, 0xFE	; 254
 1ce:	9b b9       	out	0x0b, r25	; 11
	PORTD |= (1<<LCD_EN);
 1d0:	9b b1       	in	r25, 0x0b	; 11
 1d2:	92 60       	ori	r25, 0x02	; 2
 1d4:	9b b9       	out	0x0b, r25	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1d6:	00 00       	nop
	_delay_us(1);
	PORTD &= ~(1<<LCD_EN);
 1d8:	9b b1       	in	r25, 0x0b	; 11
 1da:	9d 7f       	andi	r25, 0xFD	; 253
 1dc:	9b b9       	out	0x0b, r25	; 11
 1de:	91 e2       	ldi	r25, 0x21	; 33
 1e0:	9a 95       	dec	r25
 1e2:	f1 f7       	brne	.-4      	; 0x1e0 <LCD_Cmd+0x24>
 1e4:	00 00       	nop
	_delay_us(100);
	
	PORTD = (PORTD & 0x03) | ((cmd & 0xFC) << 2);
 1e6:	2b b1       	in	r18, 0x0b	; 11
 1e8:	8c 7f       	andi	r24, 0xFC	; 252
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	88 0f       	add	r24, r24
 1ee:	99 1f       	adc	r25, r25
 1f0:	88 0f       	add	r24, r24
 1f2:	99 1f       	adc	r25, r25
 1f4:	92 2f       	mov	r25, r18
 1f6:	93 70       	andi	r25, 0x03	; 3
 1f8:	89 2b       	or	r24, r25
 1fa:	8b b9       	out	0x0b, r24	; 11
	PORTD |= (1<<LCD_EN);
 1fc:	8b b1       	in	r24, 0x0b	; 11
 1fe:	82 60       	ori	r24, 0x02	; 2
 200:	8b b9       	out	0x0b, r24	; 11
 202:	00 00       	nop
	_delay_us(1);
	PORTD &= ~(1<<LCD_EN);
 204:	8b b1       	in	r24, 0x0b	; 11
 206:	8d 7f       	andi	r24, 0xFD	; 253
 208:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 20a:	83 ef       	ldi	r24, 0xF3	; 243
 20c:	91 e0       	ldi	r25, 0x01	; 1
 20e:	01 97       	sbiw	r24, 0x01	; 1
 210:	f1 f7       	brne	.-4      	; 0x20e <LCD_Cmd+0x52>
 212:	00 c0       	rjmp	.+0      	; 0x214 <LCD_Cmd+0x58>
 214:	00 00       	nop
 216:	08 95       	ret

00000218 <LCD_Data>:
	_delay_ms(2);
}

void LCD_Data(uint8_t data) {
	PORTD = (PORTD & 0x03) | ((data & 0xFC) >> 2);
 218:	9b b1       	in	r25, 0x0b	; 11
 21a:	28 2f       	mov	r18, r24
 21c:	26 95       	lsr	r18
 21e:	26 95       	lsr	r18
 220:	93 70       	andi	r25, 0x03	; 3
 222:	92 2b       	or	r25, r18
 224:	9b b9       	out	0x0b, r25	; 11
	PORTD |= (1<<LCD_RS);
 226:	9b b1       	in	r25, 0x0b	; 11
 228:	91 60       	ori	r25, 0x01	; 1
 22a:	9b b9       	out	0x0b, r25	; 11
	PORTD |= (1<<LCD_EN);
 22c:	9b b1       	in	r25, 0x0b	; 11
 22e:	92 60       	ori	r25, 0x02	; 2
 230:	9b b9       	out	0x0b, r25	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 232:	00 00       	nop
	_delay_us(1);
	PORTD &= ~(1<<LCD_EN);
 234:	9b b1       	in	r25, 0x0b	; 11
 236:	9d 7f       	andi	r25, 0xFD	; 253
 238:	9b b9       	out	0x0b, r25	; 11
 23a:	91 e2       	ldi	r25, 0x21	; 33
 23c:	9a 95       	dec	r25
 23e:	f1 f7       	brne	.-4      	; 0x23c <LCD_Data+0x24>
 240:	00 00       	nop
	_delay_us(100);
	
	PORTD = (PORTD & 0x03) | ((data & 0xFC) << 2);
 242:	2b b1       	in	r18, 0x0b	; 11
 244:	8c 7f       	andi	r24, 0xFC	; 252
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	88 0f       	add	r24, r24
 24a:	99 1f       	adc	r25, r25
 24c:	88 0f       	add	r24, r24
 24e:	99 1f       	adc	r25, r25
 250:	92 2f       	mov	r25, r18
 252:	93 70       	andi	r25, 0x03	; 3
 254:	89 2b       	or	r24, r25
 256:	8b b9       	out	0x0b, r24	; 11
	PORTD |= (1<<LCD_EN);
 258:	8b b1       	in	r24, 0x0b	; 11
 25a:	82 60       	ori	r24, 0x02	; 2
 25c:	8b b9       	out	0x0b, r24	; 11
 25e:	00 00       	nop
	_delay_us(1);
	PORTD &= ~(1<<LCD_EN);
 260:	8b b1       	in	r24, 0x0b	; 11
 262:	8d 7f       	andi	r24, 0xFD	; 253
 264:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 266:	83 ef       	ldi	r24, 0xF3	; 243
 268:	91 e0       	ldi	r25, 0x01	; 1
 26a:	01 97       	sbiw	r24, 0x01	; 1
 26c:	f1 f7       	brne	.-4      	; 0x26a <LCD_Data+0x52>
 26e:	00 c0       	rjmp	.+0      	; 0x270 <LCD_Data+0x58>
 270:	00 00       	nop
 272:	08 95       	ret

00000274 <LCD_String>:
	_delay_ms(2);
}

void LCD_String(const char *str) {
 274:	cf 93       	push	r28
 276:	df 93       	push	r29
 278:	ec 01       	movw	r28, r24
	while(*str) {
 27a:	03 c0       	rjmp	.+6      	; 0x282 <LCD_String+0xe>
		LCD_Data(*str++);
 27c:	21 96       	adiw	r28, 0x01	; 1
 27e:	0e 94 0c 01 	call	0x218	; 0x218 <LCD_Data>
	PORTD &= ~(1<<LCD_EN);
	_delay_ms(2);
}

void LCD_String(const char *str) {
	while(*str) {
 282:	88 81       	ld	r24, Y
 284:	81 11       	cpse	r24, r1
 286:	fa cf       	rjmp	.-12     	; 0x27c <LCD_String+0x8>
		LCD_Data(*str++);
	}
}
 288:	df 91       	pop	r29
 28a:	cf 91       	pop	r28
 28c:	08 95       	ret

0000028e <LCD_SetCursor>:

void LCD_SetCursor(uint8_t x, uint8_t y) {
	uint8_t addr = (y == 0) ? 0x80 + x : 0xC0 + x;
 28e:	61 11       	cpse	r22, r1
 290:	02 c0       	rjmp	.+4      	; 0x296 <LCD_SetCursor+0x8>
 292:	80 58       	subi	r24, 0x80	; 128
 294:	01 c0       	rjmp	.+2      	; 0x298 <LCD_SetCursor+0xa>
 296:	80 54       	subi	r24, 0x40	; 64
	LCD_Cmd(addr);
 298:	0e 94 de 00 	call	0x1bc	; 0x1bc <LCD_Cmd>
 29c:	08 95       	ret

0000029e <LCD_Clear>:
}

void LCD_Clear() {
	LCD_Cmd(0x01);
 29e:	81 e0       	ldi	r24, 0x01	; 1
 2a0:	0e 94 de 00 	call	0x1bc	; 0x1bc <LCD_Cmd>
 2a4:	81 ee       	ldi	r24, 0xE1	; 225
 2a6:	94 e0       	ldi	r25, 0x04	; 4
 2a8:	01 97       	sbiw	r24, 0x01	; 1
 2aa:	f1 f7       	brne	.-4      	; 0x2a8 <LCD_Clear+0xa>
 2ac:	00 c0       	rjmp	.+0      	; 0x2ae <LCD_Clear+0x10>
 2ae:	00 00       	nop
 2b0:	08 95       	ret

000002b2 <LCD_Init>:
 */ 

#include "LCD.h"

void LCD_Init() {
	DDRD |= (1<<LCD_RS)|(1<<LCD_EN)|(1<<LCD_D4)|(1<<LCD_D5);
 2b2:	8a b1       	in	r24, 0x0a	; 10
 2b4:	83 6c       	ori	r24, 0xC3	; 195
 2b6:	8a b9       	out	0x0a, r24	; 10
 2b8:	83 ed       	ldi	r24, 0xD3	; 211
 2ba:	90 e3       	ldi	r25, 0x30	; 48
 2bc:	01 97       	sbiw	r24, 0x01	; 1
 2be:	f1 f7       	brne	.-4      	; 0x2bc <LCD_Init+0xa>
 2c0:	00 c0       	rjmp	.+0      	; 0x2c2 <LCD_Init+0x10>
 2c2:	00 00       	nop
	_delay_ms(50);
	
	// Secuencia de inicialización para 8 bits
	LCD_Cmd(0x038);			
 2c4:	88 e3       	ldi	r24, 0x38	; 56
 2c6:	0e 94 de 00 	call	0x1bc	; 0x1bc <LCD_Cmd>
 2ca:	87 ea       	ldi	r24, 0xA7	; 167
 2cc:	91 e6       	ldi	r25, 0x61	; 97
 2ce:	01 97       	sbiw	r24, 0x01	; 1
 2d0:	f1 f7       	brne	.-4      	; 0x2ce <LCD_Init+0x1c>
 2d2:	00 c0       	rjmp	.+0      	; 0x2d4 <LCD_Init+0x22>
 2d4:	00 00       	nop
	_delay_ms(100);
	LCD_Cmd(0x0C);
 2d6:	8c e0       	ldi	r24, 0x0C	; 12
 2d8:	0e 94 de 00 	call	0x1bc	; 0x1bc <LCD_Cmd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2dc:	91 e2       	ldi	r25, 0x21	; 33
 2de:	9a 95       	dec	r25
 2e0:	f1 f7       	brne	.-4      	; 0x2de <LCD_Init+0x2c>
 2e2:	00 00       	nop
	_delay_us(100);
	LCD_Cmd(0x06);
 2e4:	86 e0       	ldi	r24, 0x06	; 6
 2e6:	0e 94 de 00 	call	0x1bc	; 0x1bc <LCD_Cmd>
 2ea:	81 e2       	ldi	r24, 0x21	; 33
 2ec:	8a 95       	dec	r24
 2ee:	f1 f7       	brne	.-4      	; 0x2ec <LCD_Init+0x3a>
 2f0:	00 00       	nop
	_delay_us(100);
	LCD_Clear();
 2f2:	0e 94 4f 01 	call	0x29e	; 0x29e <LCD_Clear>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2f6:	81 ee       	ldi	r24, 0xE1	; 225
 2f8:	94 e0       	ldi	r25, 0x04	; 4
 2fa:	01 97       	sbiw	r24, 0x01	; 1
 2fc:	f1 f7       	brne	.-4      	; 0x2fa <LCD_Init+0x48>
 2fe:	00 c0       	rjmp	.+0      	; 0x300 <LCD_Init+0x4e>
 300:	00 00       	nop
 302:	08 95       	ret

00000304 <displayVoltage>:
		
		_delay_ms(200);
	}
}

void displayVoltage(uint16_t adc_value, uint8_t x, uint8_t y) {
 304:	8f 92       	push	r8
 306:	9f 92       	push	r9
 308:	af 92       	push	r10
 30a:	bf 92       	push	r11
 30c:	ef 92       	push	r14
 30e:	ff 92       	push	r15
 310:	0f 93       	push	r16
 312:	1f 93       	push	r17
 314:	cf 93       	push	r28
 316:	df 93       	push	r29
 318:	cd b7       	in	r28, 0x3d	; 61
 31a:	de b7       	in	r29, 0x3e	; 62
 31c:	2a 97       	sbiw	r28, 0x0a	; 10
 31e:	0f b6       	in	r0, 0x3f	; 63
 320:	f8 94       	cli
 322:	de bf       	out	0x3e, r29	; 62
 324:	0f be       	out	0x3f, r0	; 63
 326:	cd bf       	out	0x3d, r28	; 61
 328:	8c 01       	movw	r16, r24
 32a:	f6 2e       	mov	r15, r22
 32c:	e4 2e       	mov	r14, r20
	char buffer[10];
	
	// Limpiar área de visualización primero
	LCD_SetCursor(x, y);
 32e:	64 2f       	mov	r22, r20
 330:	8f 2d       	mov	r24, r15
 332:	0e 94 47 01 	call	0x28e	; 0x28e <LCD_SetCursor>
	LCD_String("    "); // 4 espacios para "X.XXV"
 336:	80 e0       	ldi	r24, 0x00	; 0
 338:	91 e0       	ldi	r25, 0x01	; 1
 33a:	0e 94 3a 01 	call	0x274	; 0x274 <LCD_String>
	
	// Verificar valor válido
	if(adc_value > 1023) {
 33e:	01 15       	cp	r16, r1
 340:	84 e0       	ldi	r24, 0x04	; 4
 342:	18 07       	cpc	r17, r24
 344:	48 f0       	brcs	.+18     	; 0x358 <displayVoltage+0x54>
		LCD_SetCursor(x, y);
 346:	6e 2d       	mov	r22, r14
 348:	8f 2d       	mov	r24, r15
 34a:	0e 94 47 01 	call	0x28e	; 0x28e <LCD_SetCursor>
		LCD_String("ERR");
 34e:	85 e0       	ldi	r24, 0x05	; 5
 350:	91 e0       	ldi	r25, 0x01	; 1
 352:	0e 94 3a 01 	call	0x274	; 0x274 <LCD_String>
 356:	2f c0       	rjmp	.+94     	; 0x3b6 <displayVoltage+0xb2>
		return;
	}
	
	// Convertir y formatear
	float voltage = (adc_value * 5.0) / 1023.0;
 358:	b8 01       	movw	r22, r16
 35a:	80 e0       	ldi	r24, 0x00	; 0
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	0e 94 9c 02 	call	0x538	; 0x538 <__floatunsisf>
 362:	20 e0       	ldi	r18, 0x00	; 0
 364:	30 e0       	ldi	r19, 0x00	; 0
 366:	40 ea       	ldi	r20, 0xA0	; 160
 368:	50 e4       	ldi	r21, 0x40	; 64
 36a:	0e 94 4e 03 	call	0x69c	; 0x69c <__mulsf3>
 36e:	20 e0       	ldi	r18, 0x00	; 0
 370:	30 ec       	ldi	r19, 0xC0	; 192
 372:	4f e7       	ldi	r20, 0x7F	; 127
 374:	54 e4       	ldi	r21, 0x44	; 68
 376:	0e 94 2a 02 	call	0x454	; 0x454 <__divsf3>
 37a:	4b 01       	movw	r8, r22
 37c:	5c 01       	movw	r10, r24
	dtostrf(voltage, 4, 2, buffer); // Formato: 4 caracteres, 2 decimales
 37e:	8e 01       	movw	r16, r28
 380:	0f 5f       	subi	r16, 0xFF	; 255
 382:	1f 4f       	sbci	r17, 0xFF	; 255
 384:	22 e0       	ldi	r18, 0x02	; 2
 386:	44 e0       	ldi	r20, 0x04	; 4
 388:	0e 94 bb 03 	call	0x776	; 0x776 <dtostrf>
	
	// Asegurar formato correcto
	if(voltage < 10.0) {
 38c:	20 e0       	ldi	r18, 0x00	; 0
 38e:	30 e0       	ldi	r19, 0x00	; 0
 390:	40 e2       	ldi	r20, 0x20	; 32
 392:	51 e4       	ldi	r21, 0x41	; 65
 394:	c5 01       	movw	r24, r10
 396:	b4 01       	movw	r22, r8
 398:	0e 94 25 02 	call	0x44a	; 0x44a <__cmpsf2>
 39c:	88 23       	and	r24, r24
 39e:	1c f4       	brge	.+6      	; 0x3a6 <displayVoltage+0xa2>
		buffer[4] = 'V';
 3a0:	86 e5       	ldi	r24, 0x56	; 86
 3a2:	8d 83       	std	Y+5, r24	; 0x05
		buffer[5] = '\0';
 3a4:	1e 82       	std	Y+6, r1	; 0x06
	}
	
	LCD_SetCursor(x, y);
 3a6:	6e 2d       	mov	r22, r14
 3a8:	8f 2d       	mov	r24, r15
 3aa:	0e 94 47 01 	call	0x28e	; 0x28e <LCD_SetCursor>
	LCD_String(buffer);
 3ae:	ce 01       	movw	r24, r28
 3b0:	01 96       	adiw	r24, 0x01	; 1
 3b2:	0e 94 3a 01 	call	0x274	; 0x274 <LCD_String>
 3b6:	2a 96       	adiw	r28, 0x0a	; 10
 3b8:	0f b6       	in	r0, 0x3f	; 63
 3ba:	f8 94       	cli
 3bc:	de bf       	out	0x3e, r29	; 62
 3be:	0f be       	out	0x3f, r0	; 63
 3c0:	cd bf       	out	0x3d, r28	; 61
 3c2:	df 91       	pop	r29
 3c4:	cf 91       	pop	r28
 3c6:	1f 91       	pop	r17
 3c8:	0f 91       	pop	r16
 3ca:	ff 90       	pop	r15
 3cc:	ef 90       	pop	r14
 3ce:	bf 90       	pop	r11
 3d0:	af 90       	pop	r10
 3d2:	9f 90       	pop	r9
 3d4:	8f 90       	pop	r8
 3d6:	08 95       	ret

000003d8 <main>:

void displayVoltage(uint16_t adc_value, uint8_t x, uint8_t y);

int main(void) {
	// 1. Configuración inicial
	DDRB |= (1 << PB0); // Backlight
 3d8:	84 b1       	in	r24, 0x04	; 4
 3da:	81 60       	ori	r24, 0x01	; 1
 3dc:	84 b9       	out	0x04, r24	; 4
	PORTB |= (1 << PB0); // Encender backlight
 3de:	85 b1       	in	r24, 0x05	; 5
 3e0:	81 60       	ori	r24, 0x01	; 1
 3e2:	85 b9       	out	0x05, r24	; 5
	
	// 2. Inicializar LCD y ADC
	LCD_Init();
 3e4:	0e 94 59 01 	call	0x2b2	; 0x2b2 <LCD_Init>
 3e8:	2f ef       	ldi	r18, 0xFF	; 255
 3ea:	81 ee       	ldi	r24, 0xE1	; 225
 3ec:	94 e0       	ldi	r25, 0x04	; 4
 3ee:	21 50       	subi	r18, 0x01	; 1
 3f0:	80 40       	sbci	r24, 0x00	; 0
 3f2:	90 40       	sbci	r25, 0x00	; 0
 3f4:	e1 f7       	brne	.-8      	; 0x3ee <main+0x16>
 3f6:	00 c0       	rjmp	.+0      	; 0x3f8 <main+0x20>
 3f8:	00 00       	nop
	_delay_ms(100);
	LCD_Clear();
 3fa:	0e 94 4f 01 	call	0x29e	; 0x29e <LCD_Clear>
	ADC_Init();
 3fe:	0e 94 c8 00 	call	0x190	; 0x190 <ADC_Init>
	
	// 3. Mostrar valores iniciales
	LCD_SetCursor(0, 0);
 402:	60 e0       	ldi	r22, 0x00	; 0
 404:	80 e0       	ldi	r24, 0x00	; 0
 406:	0e 94 47 01 	call	0x28e	; 0x28e <LCD_SetCursor>
	LCD_String("S1:    S1:     S2:");
 40a:	89 e0       	ldi	r24, 0x09	; 9
 40c:	91 e0       	ldi	r25, 0x01	; 1
 40e:	0e 94 3a 01 	call	0x274	; 0x274 <LCD_String>
	
	while(1) {
		// Leer y mostrar valores
		uint16_t val1 = ADC_Read(6);
 412:	86 e0       	ldi	r24, 0x06	; 6
 414:	0e 94 cc 00 	call	0x198	; 0x198 <ADC_Read>
 418:	8c 01       	movw	r16, r24
		uint16_t val2 = ADC_Read(7);
 41a:	87 e0       	ldi	r24, 0x07	; 7
 41c:	0e 94 cc 00 	call	0x198	; 0x198 <ADC_Read>
 420:	ec 01       	movw	r28, r24
		
		// Mostrar valores formateados
		displayVoltage(val1, 0, 1);
 422:	41 e0       	ldi	r20, 0x01	; 1
 424:	60 e0       	ldi	r22, 0x00	; 0
 426:	c8 01       	movw	r24, r16
 428:	0e 94 82 01 	call	0x304	; 0x304 <displayVoltage>
		displayVoltage(val2, 8, 1);
 42c:	41 e0       	ldi	r20, 0x01	; 1
 42e:	68 e0       	ldi	r22, 0x08	; 8
 430:	ce 01       	movw	r24, r28
 432:	0e 94 82 01 	call	0x304	; 0x304 <displayVoltage>
 436:	2f ef       	ldi	r18, 0xFF	; 255
 438:	83 ec       	ldi	r24, 0xC3	; 195
 43a:	99 e0       	ldi	r25, 0x09	; 9
 43c:	21 50       	subi	r18, 0x01	; 1
 43e:	80 40       	sbci	r24, 0x00	; 0
 440:	90 40       	sbci	r25, 0x00	; 0
 442:	e1 f7       	brne	.-8      	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 444:	00 c0       	rjmp	.+0      	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 446:	00 00       	nop
 448:	e4 cf       	rjmp	.-56     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>

0000044a <__cmpsf2>:
 44a:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <__fp_cmp>
 44e:	08 f4       	brcc	.+2      	; 0x452 <__cmpsf2+0x8>
 450:	81 e0       	ldi	r24, 0x01	; 1
 452:	08 95       	ret

00000454 <__divsf3>:
 454:	0e 94 3e 02 	call	0x47c	; 0x47c <__divsf3x>
 458:	0c 94 14 03 	jmp	0x628	; 0x628 <__fp_round>
 45c:	0e 94 0d 03 	call	0x61a	; 0x61a <__fp_pscB>
 460:	58 f0       	brcs	.+22     	; 0x478 <__divsf3+0x24>
 462:	0e 94 06 03 	call	0x60c	; 0x60c <__fp_pscA>
 466:	40 f0       	brcs	.+16     	; 0x478 <__divsf3+0x24>
 468:	29 f4       	brne	.+10     	; 0x474 <__divsf3+0x20>
 46a:	5f 3f       	cpi	r21, 0xFF	; 255
 46c:	29 f0       	breq	.+10     	; 0x478 <__divsf3+0x24>
 46e:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__fp_inf>
 472:	51 11       	cpse	r21, r1
 474:	0c 94 48 03 	jmp	0x690	; 0x690 <__fp_szero>
 478:	0c 94 03 03 	jmp	0x606	; 0x606 <__fp_nan>

0000047c <__divsf3x>:
 47c:	0e 94 25 03 	call	0x64a	; 0x64a <__fp_split3>
 480:	68 f3       	brcs	.-38     	; 0x45c <__divsf3+0x8>

00000482 <__divsf3_pse>:
 482:	99 23       	and	r25, r25
 484:	b1 f3       	breq	.-20     	; 0x472 <__divsf3+0x1e>
 486:	55 23       	and	r21, r21
 488:	91 f3       	breq	.-28     	; 0x46e <__divsf3+0x1a>
 48a:	95 1b       	sub	r25, r21
 48c:	55 0b       	sbc	r21, r21
 48e:	bb 27       	eor	r27, r27
 490:	aa 27       	eor	r26, r26
 492:	62 17       	cp	r22, r18
 494:	73 07       	cpc	r23, r19
 496:	84 07       	cpc	r24, r20
 498:	38 f0       	brcs	.+14     	; 0x4a8 <__divsf3_pse+0x26>
 49a:	9f 5f       	subi	r25, 0xFF	; 255
 49c:	5f 4f       	sbci	r21, 0xFF	; 255
 49e:	22 0f       	add	r18, r18
 4a0:	33 1f       	adc	r19, r19
 4a2:	44 1f       	adc	r20, r20
 4a4:	aa 1f       	adc	r26, r26
 4a6:	a9 f3       	breq	.-22     	; 0x492 <__divsf3_pse+0x10>
 4a8:	35 d0       	rcall	.+106    	; 0x514 <__divsf3_pse+0x92>
 4aa:	0e 2e       	mov	r0, r30
 4ac:	3a f0       	brmi	.+14     	; 0x4bc <__divsf3_pse+0x3a>
 4ae:	e0 e8       	ldi	r30, 0x80	; 128
 4b0:	32 d0       	rcall	.+100    	; 0x516 <__divsf3_pse+0x94>
 4b2:	91 50       	subi	r25, 0x01	; 1
 4b4:	50 40       	sbci	r21, 0x00	; 0
 4b6:	e6 95       	lsr	r30
 4b8:	00 1c       	adc	r0, r0
 4ba:	ca f7       	brpl	.-14     	; 0x4ae <__divsf3_pse+0x2c>
 4bc:	2b d0       	rcall	.+86     	; 0x514 <__divsf3_pse+0x92>
 4be:	fe 2f       	mov	r31, r30
 4c0:	29 d0       	rcall	.+82     	; 0x514 <__divsf3_pse+0x92>
 4c2:	66 0f       	add	r22, r22
 4c4:	77 1f       	adc	r23, r23
 4c6:	88 1f       	adc	r24, r24
 4c8:	bb 1f       	adc	r27, r27
 4ca:	26 17       	cp	r18, r22
 4cc:	37 07       	cpc	r19, r23
 4ce:	48 07       	cpc	r20, r24
 4d0:	ab 07       	cpc	r26, r27
 4d2:	b0 e8       	ldi	r27, 0x80	; 128
 4d4:	09 f0       	breq	.+2      	; 0x4d8 <__divsf3_pse+0x56>
 4d6:	bb 0b       	sbc	r27, r27
 4d8:	80 2d       	mov	r24, r0
 4da:	bf 01       	movw	r22, r30
 4dc:	ff 27       	eor	r31, r31
 4de:	93 58       	subi	r25, 0x83	; 131
 4e0:	5f 4f       	sbci	r21, 0xFF	; 255
 4e2:	3a f0       	brmi	.+14     	; 0x4f2 <__divsf3_pse+0x70>
 4e4:	9e 3f       	cpi	r25, 0xFE	; 254
 4e6:	51 05       	cpc	r21, r1
 4e8:	78 f0       	brcs	.+30     	; 0x508 <__divsf3_pse+0x86>
 4ea:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__fp_inf>
 4ee:	0c 94 48 03 	jmp	0x690	; 0x690 <__fp_szero>
 4f2:	5f 3f       	cpi	r21, 0xFF	; 255
 4f4:	e4 f3       	brlt	.-8      	; 0x4ee <__divsf3_pse+0x6c>
 4f6:	98 3e       	cpi	r25, 0xE8	; 232
 4f8:	d4 f3       	brlt	.-12     	; 0x4ee <__divsf3_pse+0x6c>
 4fa:	86 95       	lsr	r24
 4fc:	77 95       	ror	r23
 4fe:	67 95       	ror	r22
 500:	b7 95       	ror	r27
 502:	f7 95       	ror	r31
 504:	9f 5f       	subi	r25, 0xFF	; 255
 506:	c9 f7       	brne	.-14     	; 0x4fa <__divsf3_pse+0x78>
 508:	88 0f       	add	r24, r24
 50a:	91 1d       	adc	r25, r1
 50c:	96 95       	lsr	r25
 50e:	87 95       	ror	r24
 510:	97 f9       	bld	r25, 7
 512:	08 95       	ret
 514:	e1 e0       	ldi	r30, 0x01	; 1
 516:	66 0f       	add	r22, r22
 518:	77 1f       	adc	r23, r23
 51a:	88 1f       	adc	r24, r24
 51c:	bb 1f       	adc	r27, r27
 51e:	62 17       	cp	r22, r18
 520:	73 07       	cpc	r23, r19
 522:	84 07       	cpc	r24, r20
 524:	ba 07       	cpc	r27, r26
 526:	20 f0       	brcs	.+8      	; 0x530 <__divsf3_pse+0xae>
 528:	62 1b       	sub	r22, r18
 52a:	73 0b       	sbc	r23, r19
 52c:	84 0b       	sbc	r24, r20
 52e:	ba 0b       	sbc	r27, r26
 530:	ee 1f       	adc	r30, r30
 532:	88 f7       	brcc	.-30     	; 0x516 <__divsf3_pse+0x94>
 534:	e0 95       	com	r30
 536:	08 95       	ret

00000538 <__floatunsisf>:
 538:	e8 94       	clt
 53a:	09 c0       	rjmp	.+18     	; 0x54e <__floatsisf+0x12>

0000053c <__floatsisf>:
 53c:	97 fb       	bst	r25, 7
 53e:	3e f4       	brtc	.+14     	; 0x54e <__floatsisf+0x12>
 540:	90 95       	com	r25
 542:	80 95       	com	r24
 544:	70 95       	com	r23
 546:	61 95       	neg	r22
 548:	7f 4f       	sbci	r23, 0xFF	; 255
 54a:	8f 4f       	sbci	r24, 0xFF	; 255
 54c:	9f 4f       	sbci	r25, 0xFF	; 255
 54e:	99 23       	and	r25, r25
 550:	a9 f0       	breq	.+42     	; 0x57c <__floatsisf+0x40>
 552:	f9 2f       	mov	r31, r25
 554:	96 e9       	ldi	r25, 0x96	; 150
 556:	bb 27       	eor	r27, r27
 558:	93 95       	inc	r25
 55a:	f6 95       	lsr	r31
 55c:	87 95       	ror	r24
 55e:	77 95       	ror	r23
 560:	67 95       	ror	r22
 562:	b7 95       	ror	r27
 564:	f1 11       	cpse	r31, r1
 566:	f8 cf       	rjmp	.-16     	; 0x558 <__floatsisf+0x1c>
 568:	fa f4       	brpl	.+62     	; 0x5a8 <__floatsisf+0x6c>
 56a:	bb 0f       	add	r27, r27
 56c:	11 f4       	brne	.+4      	; 0x572 <__floatsisf+0x36>
 56e:	60 ff       	sbrs	r22, 0
 570:	1b c0       	rjmp	.+54     	; 0x5a8 <__floatsisf+0x6c>
 572:	6f 5f       	subi	r22, 0xFF	; 255
 574:	7f 4f       	sbci	r23, 0xFF	; 255
 576:	8f 4f       	sbci	r24, 0xFF	; 255
 578:	9f 4f       	sbci	r25, 0xFF	; 255
 57a:	16 c0       	rjmp	.+44     	; 0x5a8 <__floatsisf+0x6c>
 57c:	88 23       	and	r24, r24
 57e:	11 f0       	breq	.+4      	; 0x584 <__floatsisf+0x48>
 580:	96 e9       	ldi	r25, 0x96	; 150
 582:	11 c0       	rjmp	.+34     	; 0x5a6 <__floatsisf+0x6a>
 584:	77 23       	and	r23, r23
 586:	21 f0       	breq	.+8      	; 0x590 <__floatsisf+0x54>
 588:	9e e8       	ldi	r25, 0x8E	; 142
 58a:	87 2f       	mov	r24, r23
 58c:	76 2f       	mov	r23, r22
 58e:	05 c0       	rjmp	.+10     	; 0x59a <__floatsisf+0x5e>
 590:	66 23       	and	r22, r22
 592:	71 f0       	breq	.+28     	; 0x5b0 <__floatsisf+0x74>
 594:	96 e8       	ldi	r25, 0x86	; 134
 596:	86 2f       	mov	r24, r22
 598:	70 e0       	ldi	r23, 0x00	; 0
 59a:	60 e0       	ldi	r22, 0x00	; 0
 59c:	2a f0       	brmi	.+10     	; 0x5a8 <__floatsisf+0x6c>
 59e:	9a 95       	dec	r25
 5a0:	66 0f       	add	r22, r22
 5a2:	77 1f       	adc	r23, r23
 5a4:	88 1f       	adc	r24, r24
 5a6:	da f7       	brpl	.-10     	; 0x59e <__floatsisf+0x62>
 5a8:	88 0f       	add	r24, r24
 5aa:	96 95       	lsr	r25
 5ac:	87 95       	ror	r24
 5ae:	97 f9       	bld	r25, 7
 5b0:	08 95       	ret

000005b2 <__fp_cmp>:
 5b2:	99 0f       	add	r25, r25
 5b4:	00 08       	sbc	r0, r0
 5b6:	55 0f       	add	r21, r21
 5b8:	aa 0b       	sbc	r26, r26
 5ba:	e0 e8       	ldi	r30, 0x80	; 128
 5bc:	fe ef       	ldi	r31, 0xFE	; 254
 5be:	16 16       	cp	r1, r22
 5c0:	17 06       	cpc	r1, r23
 5c2:	e8 07       	cpc	r30, r24
 5c4:	f9 07       	cpc	r31, r25
 5c6:	c0 f0       	brcs	.+48     	; 0x5f8 <__fp_cmp+0x46>
 5c8:	12 16       	cp	r1, r18
 5ca:	13 06       	cpc	r1, r19
 5cc:	e4 07       	cpc	r30, r20
 5ce:	f5 07       	cpc	r31, r21
 5d0:	98 f0       	brcs	.+38     	; 0x5f8 <__fp_cmp+0x46>
 5d2:	62 1b       	sub	r22, r18
 5d4:	73 0b       	sbc	r23, r19
 5d6:	84 0b       	sbc	r24, r20
 5d8:	95 0b       	sbc	r25, r21
 5da:	39 f4       	brne	.+14     	; 0x5ea <__fp_cmp+0x38>
 5dc:	0a 26       	eor	r0, r26
 5de:	61 f0       	breq	.+24     	; 0x5f8 <__fp_cmp+0x46>
 5e0:	23 2b       	or	r18, r19
 5e2:	24 2b       	or	r18, r20
 5e4:	25 2b       	or	r18, r21
 5e6:	21 f4       	brne	.+8      	; 0x5f0 <__fp_cmp+0x3e>
 5e8:	08 95       	ret
 5ea:	0a 26       	eor	r0, r26
 5ec:	09 f4       	brne	.+2      	; 0x5f0 <__fp_cmp+0x3e>
 5ee:	a1 40       	sbci	r26, 0x01	; 1
 5f0:	a6 95       	lsr	r26
 5f2:	8f ef       	ldi	r24, 0xFF	; 255
 5f4:	81 1d       	adc	r24, r1
 5f6:	81 1d       	adc	r24, r1
 5f8:	08 95       	ret

000005fa <__fp_inf>:
 5fa:	97 f9       	bld	r25, 7
 5fc:	9f 67       	ori	r25, 0x7F	; 127
 5fe:	80 e8       	ldi	r24, 0x80	; 128
 600:	70 e0       	ldi	r23, 0x00	; 0
 602:	60 e0       	ldi	r22, 0x00	; 0
 604:	08 95       	ret

00000606 <__fp_nan>:
 606:	9f ef       	ldi	r25, 0xFF	; 255
 608:	80 ec       	ldi	r24, 0xC0	; 192
 60a:	08 95       	ret

0000060c <__fp_pscA>:
 60c:	00 24       	eor	r0, r0
 60e:	0a 94       	dec	r0
 610:	16 16       	cp	r1, r22
 612:	17 06       	cpc	r1, r23
 614:	18 06       	cpc	r1, r24
 616:	09 06       	cpc	r0, r25
 618:	08 95       	ret

0000061a <__fp_pscB>:
 61a:	00 24       	eor	r0, r0
 61c:	0a 94       	dec	r0
 61e:	12 16       	cp	r1, r18
 620:	13 06       	cpc	r1, r19
 622:	14 06       	cpc	r1, r20
 624:	05 06       	cpc	r0, r21
 626:	08 95       	ret

00000628 <__fp_round>:
 628:	09 2e       	mov	r0, r25
 62a:	03 94       	inc	r0
 62c:	00 0c       	add	r0, r0
 62e:	11 f4       	brne	.+4      	; 0x634 <__fp_round+0xc>
 630:	88 23       	and	r24, r24
 632:	52 f0       	brmi	.+20     	; 0x648 <__fp_round+0x20>
 634:	bb 0f       	add	r27, r27
 636:	40 f4       	brcc	.+16     	; 0x648 <__fp_round+0x20>
 638:	bf 2b       	or	r27, r31
 63a:	11 f4       	brne	.+4      	; 0x640 <__fp_round+0x18>
 63c:	60 ff       	sbrs	r22, 0
 63e:	04 c0       	rjmp	.+8      	; 0x648 <__fp_round+0x20>
 640:	6f 5f       	subi	r22, 0xFF	; 255
 642:	7f 4f       	sbci	r23, 0xFF	; 255
 644:	8f 4f       	sbci	r24, 0xFF	; 255
 646:	9f 4f       	sbci	r25, 0xFF	; 255
 648:	08 95       	ret

0000064a <__fp_split3>:
 64a:	57 fd       	sbrc	r21, 7
 64c:	90 58       	subi	r25, 0x80	; 128
 64e:	44 0f       	add	r20, r20
 650:	55 1f       	adc	r21, r21
 652:	59 f0       	breq	.+22     	; 0x66a <__fp_splitA+0x10>
 654:	5f 3f       	cpi	r21, 0xFF	; 255
 656:	71 f0       	breq	.+28     	; 0x674 <__fp_splitA+0x1a>
 658:	47 95       	ror	r20

0000065a <__fp_splitA>:
 65a:	88 0f       	add	r24, r24
 65c:	97 fb       	bst	r25, 7
 65e:	99 1f       	adc	r25, r25
 660:	61 f0       	breq	.+24     	; 0x67a <__fp_splitA+0x20>
 662:	9f 3f       	cpi	r25, 0xFF	; 255
 664:	79 f0       	breq	.+30     	; 0x684 <__fp_splitA+0x2a>
 666:	87 95       	ror	r24
 668:	08 95       	ret
 66a:	12 16       	cp	r1, r18
 66c:	13 06       	cpc	r1, r19
 66e:	14 06       	cpc	r1, r20
 670:	55 1f       	adc	r21, r21
 672:	f2 cf       	rjmp	.-28     	; 0x658 <__fp_split3+0xe>
 674:	46 95       	lsr	r20
 676:	f1 df       	rcall	.-30     	; 0x65a <__fp_splitA>
 678:	08 c0       	rjmp	.+16     	; 0x68a <__fp_splitA+0x30>
 67a:	16 16       	cp	r1, r22
 67c:	17 06       	cpc	r1, r23
 67e:	18 06       	cpc	r1, r24
 680:	99 1f       	adc	r25, r25
 682:	f1 cf       	rjmp	.-30     	; 0x666 <__fp_splitA+0xc>
 684:	86 95       	lsr	r24
 686:	71 05       	cpc	r23, r1
 688:	61 05       	cpc	r22, r1
 68a:	08 94       	sec
 68c:	08 95       	ret

0000068e <__fp_zero>:
 68e:	e8 94       	clt

00000690 <__fp_szero>:
 690:	bb 27       	eor	r27, r27
 692:	66 27       	eor	r22, r22
 694:	77 27       	eor	r23, r23
 696:	cb 01       	movw	r24, r22
 698:	97 f9       	bld	r25, 7
 69a:	08 95       	ret

0000069c <__mulsf3>:
 69c:	0e 94 61 03 	call	0x6c2	; 0x6c2 <__mulsf3x>
 6a0:	0c 94 14 03 	jmp	0x628	; 0x628 <__fp_round>
 6a4:	0e 94 06 03 	call	0x60c	; 0x60c <__fp_pscA>
 6a8:	38 f0       	brcs	.+14     	; 0x6b8 <__mulsf3+0x1c>
 6aa:	0e 94 0d 03 	call	0x61a	; 0x61a <__fp_pscB>
 6ae:	20 f0       	brcs	.+8      	; 0x6b8 <__mulsf3+0x1c>
 6b0:	95 23       	and	r25, r21
 6b2:	11 f0       	breq	.+4      	; 0x6b8 <__mulsf3+0x1c>
 6b4:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__fp_inf>
 6b8:	0c 94 03 03 	jmp	0x606	; 0x606 <__fp_nan>
 6bc:	11 24       	eor	r1, r1
 6be:	0c 94 48 03 	jmp	0x690	; 0x690 <__fp_szero>

000006c2 <__mulsf3x>:
 6c2:	0e 94 25 03 	call	0x64a	; 0x64a <__fp_split3>
 6c6:	70 f3       	brcs	.-36     	; 0x6a4 <__mulsf3+0x8>

000006c8 <__mulsf3_pse>:
 6c8:	95 9f       	mul	r25, r21
 6ca:	c1 f3       	breq	.-16     	; 0x6bc <__mulsf3+0x20>
 6cc:	95 0f       	add	r25, r21
 6ce:	50 e0       	ldi	r21, 0x00	; 0
 6d0:	55 1f       	adc	r21, r21
 6d2:	62 9f       	mul	r22, r18
 6d4:	f0 01       	movw	r30, r0
 6d6:	72 9f       	mul	r23, r18
 6d8:	bb 27       	eor	r27, r27
 6da:	f0 0d       	add	r31, r0
 6dc:	b1 1d       	adc	r27, r1
 6de:	63 9f       	mul	r22, r19
 6e0:	aa 27       	eor	r26, r26
 6e2:	f0 0d       	add	r31, r0
 6e4:	b1 1d       	adc	r27, r1
 6e6:	aa 1f       	adc	r26, r26
 6e8:	64 9f       	mul	r22, r20
 6ea:	66 27       	eor	r22, r22
 6ec:	b0 0d       	add	r27, r0
 6ee:	a1 1d       	adc	r26, r1
 6f0:	66 1f       	adc	r22, r22
 6f2:	82 9f       	mul	r24, r18
 6f4:	22 27       	eor	r18, r18
 6f6:	b0 0d       	add	r27, r0
 6f8:	a1 1d       	adc	r26, r1
 6fa:	62 1f       	adc	r22, r18
 6fc:	73 9f       	mul	r23, r19
 6fe:	b0 0d       	add	r27, r0
 700:	a1 1d       	adc	r26, r1
 702:	62 1f       	adc	r22, r18
 704:	83 9f       	mul	r24, r19
 706:	a0 0d       	add	r26, r0
 708:	61 1d       	adc	r22, r1
 70a:	22 1f       	adc	r18, r18
 70c:	74 9f       	mul	r23, r20
 70e:	33 27       	eor	r19, r19
 710:	a0 0d       	add	r26, r0
 712:	61 1d       	adc	r22, r1
 714:	23 1f       	adc	r18, r19
 716:	84 9f       	mul	r24, r20
 718:	60 0d       	add	r22, r0
 71a:	21 1d       	adc	r18, r1
 71c:	82 2f       	mov	r24, r18
 71e:	76 2f       	mov	r23, r22
 720:	6a 2f       	mov	r22, r26
 722:	11 24       	eor	r1, r1
 724:	9f 57       	subi	r25, 0x7F	; 127
 726:	50 40       	sbci	r21, 0x00	; 0
 728:	9a f0       	brmi	.+38     	; 0x750 <__mulsf3_pse+0x88>
 72a:	f1 f0       	breq	.+60     	; 0x768 <__mulsf3_pse+0xa0>
 72c:	88 23       	and	r24, r24
 72e:	4a f0       	brmi	.+18     	; 0x742 <__mulsf3_pse+0x7a>
 730:	ee 0f       	add	r30, r30
 732:	ff 1f       	adc	r31, r31
 734:	bb 1f       	adc	r27, r27
 736:	66 1f       	adc	r22, r22
 738:	77 1f       	adc	r23, r23
 73a:	88 1f       	adc	r24, r24
 73c:	91 50       	subi	r25, 0x01	; 1
 73e:	50 40       	sbci	r21, 0x00	; 0
 740:	a9 f7       	brne	.-22     	; 0x72c <__mulsf3_pse+0x64>
 742:	9e 3f       	cpi	r25, 0xFE	; 254
 744:	51 05       	cpc	r21, r1
 746:	80 f0       	brcs	.+32     	; 0x768 <__mulsf3_pse+0xa0>
 748:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__fp_inf>
 74c:	0c 94 48 03 	jmp	0x690	; 0x690 <__fp_szero>
 750:	5f 3f       	cpi	r21, 0xFF	; 255
 752:	e4 f3       	brlt	.-8      	; 0x74c <__mulsf3_pse+0x84>
 754:	98 3e       	cpi	r25, 0xE8	; 232
 756:	d4 f3       	brlt	.-12     	; 0x74c <__mulsf3_pse+0x84>
 758:	86 95       	lsr	r24
 75a:	77 95       	ror	r23
 75c:	67 95       	ror	r22
 75e:	b7 95       	ror	r27
 760:	f7 95       	ror	r31
 762:	e7 95       	ror	r30
 764:	9f 5f       	subi	r25, 0xFF	; 255
 766:	c1 f7       	brne	.-16     	; 0x758 <__mulsf3_pse+0x90>
 768:	fe 2b       	or	r31, r30
 76a:	88 0f       	add	r24, r24
 76c:	91 1d       	adc	r25, r1
 76e:	96 95       	lsr	r25
 770:	87 95       	ror	r24
 772:	97 f9       	bld	r25, 7
 774:	08 95       	ret

00000776 <dtostrf>:
 776:	ef 92       	push	r14
 778:	0f 93       	push	r16
 77a:	1f 93       	push	r17
 77c:	cf 93       	push	r28
 77e:	df 93       	push	r29
 780:	e8 01       	movw	r28, r16
 782:	47 fd       	sbrc	r20, 7
 784:	02 c0       	rjmp	.+4      	; 0x78a <dtostrf+0x14>
 786:	34 e0       	ldi	r19, 0x04	; 4
 788:	01 c0       	rjmp	.+2      	; 0x78c <dtostrf+0x16>
 78a:	34 e1       	ldi	r19, 0x14	; 20
 78c:	04 2e       	mov	r0, r20
 78e:	00 0c       	add	r0, r0
 790:	55 0b       	sbc	r21, r21
 792:	57 ff       	sbrs	r21, 7
 794:	03 c0       	rjmp	.+6      	; 0x79c <dtostrf+0x26>
 796:	51 95       	neg	r21
 798:	41 95       	neg	r20
 79a:	51 09       	sbc	r21, r1
 79c:	e3 2e       	mov	r14, r19
 79e:	02 2f       	mov	r16, r18
 7a0:	24 2f       	mov	r18, r20
 7a2:	ae 01       	movw	r20, r28
 7a4:	0e 94 db 03 	call	0x7b6	; 0x7b6 <dtoa_prf>
 7a8:	ce 01       	movw	r24, r28
 7aa:	df 91       	pop	r29
 7ac:	cf 91       	pop	r28
 7ae:	1f 91       	pop	r17
 7b0:	0f 91       	pop	r16
 7b2:	ef 90       	pop	r14
 7b4:	08 95       	ret

000007b6 <dtoa_prf>:
 7b6:	a9 e0       	ldi	r26, 0x09	; 9
 7b8:	b0 e0       	ldi	r27, 0x00	; 0
 7ba:	e1 ee       	ldi	r30, 0xE1	; 225
 7bc:	f3 e0       	ldi	r31, 0x03	; 3
 7be:	0c 94 13 06 	jmp	0xc26	; 0xc26 <__prologue_saves__+0xc>
 7c2:	6a 01       	movw	r12, r20
 7c4:	12 2f       	mov	r17, r18
 7c6:	b0 2e       	mov	r11, r16
 7c8:	2b e3       	ldi	r18, 0x3B	; 59
 7ca:	20 17       	cp	r18, r16
 7cc:	20 f0       	brcs	.+8      	; 0x7d6 <dtoa_prf+0x20>
 7ce:	ff 24       	eor	r15, r15
 7d0:	f3 94       	inc	r15
 7d2:	f0 0e       	add	r15, r16
 7d4:	02 c0       	rjmp	.+4      	; 0x7da <dtoa_prf+0x24>
 7d6:	2c e3       	ldi	r18, 0x3C	; 60
 7d8:	f2 2e       	mov	r15, r18
 7da:	0f 2d       	mov	r16, r15
 7dc:	27 e0       	ldi	r18, 0x07	; 7
 7de:	ae 01       	movw	r20, r28
 7e0:	4f 5f       	subi	r20, 0xFF	; 255
 7e2:	5f 4f       	sbci	r21, 0xFF	; 255
 7e4:	0e 94 35 05 	call	0xa6a	; 0xa6a <__ftoa_engine>
 7e8:	bc 01       	movw	r22, r24
 7ea:	49 81       	ldd	r20, Y+1	; 0x01
 7ec:	84 2f       	mov	r24, r20
 7ee:	89 70       	andi	r24, 0x09	; 9
 7f0:	81 30       	cpi	r24, 0x01	; 1
 7f2:	31 f0       	breq	.+12     	; 0x800 <__DATA_REGION_LENGTH__>
 7f4:	e1 fc       	sbrc	r14, 1
 7f6:	06 c0       	rjmp	.+12     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 7f8:	e0 fe       	sbrs	r14, 0
 7fa:	06 c0       	rjmp	.+12     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 7fc:	90 e2       	ldi	r25, 0x20	; 32
 7fe:	05 c0       	rjmp	.+10     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
 800:	9d e2       	ldi	r25, 0x2D	; 45
 802:	03 c0       	rjmp	.+6      	; 0x80a <__DATA_REGION_LENGTH__+0xa>
 804:	9b e2       	ldi	r25, 0x2B	; 43
 806:	01 c0       	rjmp	.+2      	; 0x80a <__DATA_REGION_LENGTH__+0xa>
 808:	90 e0       	ldi	r25, 0x00	; 0
 80a:	5e 2d       	mov	r21, r14
 80c:	50 71       	andi	r21, 0x10	; 16
 80e:	43 ff       	sbrs	r20, 3
 810:	3c c0       	rjmp	.+120    	; 0x88a <__DATA_REGION_LENGTH__+0x8a>
 812:	91 11       	cpse	r25, r1
 814:	02 c0       	rjmp	.+4      	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 816:	83 e0       	ldi	r24, 0x03	; 3
 818:	01 c0       	rjmp	.+2      	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
 81a:	84 e0       	ldi	r24, 0x04	; 4
 81c:	81 17       	cp	r24, r17
 81e:	18 f4       	brcc	.+6      	; 0x826 <__DATA_REGION_LENGTH__+0x26>
 820:	21 2f       	mov	r18, r17
 822:	28 1b       	sub	r18, r24
 824:	01 c0       	rjmp	.+2      	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 826:	20 e0       	ldi	r18, 0x00	; 0
 828:	51 11       	cpse	r21, r1
 82a:	0b c0       	rjmp	.+22     	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 82c:	f6 01       	movw	r30, r12
 82e:	82 2f       	mov	r24, r18
 830:	30 e2       	ldi	r19, 0x20	; 32
 832:	88 23       	and	r24, r24
 834:	19 f0       	breq	.+6      	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 836:	31 93       	st	Z+, r19
 838:	81 50       	subi	r24, 0x01	; 1
 83a:	fb cf       	rjmp	.-10     	; 0x832 <__DATA_REGION_LENGTH__+0x32>
 83c:	c2 0e       	add	r12, r18
 83e:	d1 1c       	adc	r13, r1
 840:	20 e0       	ldi	r18, 0x00	; 0
 842:	99 23       	and	r25, r25
 844:	29 f0       	breq	.+10     	; 0x850 <__DATA_REGION_LENGTH__+0x50>
 846:	d6 01       	movw	r26, r12
 848:	9c 93       	st	X, r25
 84a:	f6 01       	movw	r30, r12
 84c:	31 96       	adiw	r30, 0x01	; 1
 84e:	6f 01       	movw	r12, r30
 850:	c6 01       	movw	r24, r12
 852:	03 96       	adiw	r24, 0x03	; 3
 854:	e2 fe       	sbrs	r14, 2
 856:	0a c0       	rjmp	.+20     	; 0x86c <__DATA_REGION_LENGTH__+0x6c>
 858:	3e e4       	ldi	r19, 0x4E	; 78
 85a:	d6 01       	movw	r26, r12
 85c:	3c 93       	st	X, r19
 85e:	41 e4       	ldi	r20, 0x41	; 65
 860:	11 96       	adiw	r26, 0x01	; 1
 862:	4c 93       	st	X, r20
 864:	11 97       	sbiw	r26, 0x01	; 1
 866:	12 96       	adiw	r26, 0x02	; 2
 868:	3c 93       	st	X, r19
 86a:	06 c0       	rjmp	.+12     	; 0x878 <__DATA_REGION_LENGTH__+0x78>
 86c:	3e e6       	ldi	r19, 0x6E	; 110
 86e:	f6 01       	movw	r30, r12
 870:	30 83       	st	Z, r19
 872:	41 e6       	ldi	r20, 0x61	; 97
 874:	41 83       	std	Z+1, r20	; 0x01
 876:	32 83       	std	Z+2, r19	; 0x02
 878:	fc 01       	movw	r30, r24
 87a:	32 2f       	mov	r19, r18
 87c:	40 e2       	ldi	r20, 0x20	; 32
 87e:	33 23       	and	r19, r19
 880:	09 f4       	brne	.+2      	; 0x884 <__DATA_REGION_LENGTH__+0x84>
 882:	42 c0       	rjmp	.+132    	; 0x908 <__stack+0x9>
 884:	41 93       	st	Z+, r20
 886:	31 50       	subi	r19, 0x01	; 1
 888:	fa cf       	rjmp	.-12     	; 0x87e <__DATA_REGION_LENGTH__+0x7e>
 88a:	42 ff       	sbrs	r20, 2
 88c:	44 c0       	rjmp	.+136    	; 0x916 <__stack+0x17>
 88e:	91 11       	cpse	r25, r1
 890:	02 c0       	rjmp	.+4      	; 0x896 <__DATA_REGION_LENGTH__+0x96>
 892:	83 e0       	ldi	r24, 0x03	; 3
 894:	01 c0       	rjmp	.+2      	; 0x898 <__DATA_REGION_LENGTH__+0x98>
 896:	84 e0       	ldi	r24, 0x04	; 4
 898:	81 17       	cp	r24, r17
 89a:	18 f4       	brcc	.+6      	; 0x8a2 <__DATA_REGION_LENGTH__+0xa2>
 89c:	21 2f       	mov	r18, r17
 89e:	28 1b       	sub	r18, r24
 8a0:	01 c0       	rjmp	.+2      	; 0x8a4 <__DATA_REGION_LENGTH__+0xa4>
 8a2:	20 e0       	ldi	r18, 0x00	; 0
 8a4:	51 11       	cpse	r21, r1
 8a6:	0b c0       	rjmp	.+22     	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
 8a8:	f6 01       	movw	r30, r12
 8aa:	82 2f       	mov	r24, r18
 8ac:	30 e2       	ldi	r19, 0x20	; 32
 8ae:	88 23       	and	r24, r24
 8b0:	19 f0       	breq	.+6      	; 0x8b8 <__DATA_REGION_LENGTH__+0xb8>
 8b2:	31 93       	st	Z+, r19
 8b4:	81 50       	subi	r24, 0x01	; 1
 8b6:	fb cf       	rjmp	.-10     	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
 8b8:	c2 0e       	add	r12, r18
 8ba:	d1 1c       	adc	r13, r1
 8bc:	20 e0       	ldi	r18, 0x00	; 0
 8be:	99 23       	and	r25, r25
 8c0:	29 f0       	breq	.+10     	; 0x8cc <__DATA_REGION_LENGTH__+0xcc>
 8c2:	d6 01       	movw	r26, r12
 8c4:	9c 93       	st	X, r25
 8c6:	f6 01       	movw	r30, r12
 8c8:	31 96       	adiw	r30, 0x01	; 1
 8ca:	6f 01       	movw	r12, r30
 8cc:	c6 01       	movw	r24, r12
 8ce:	03 96       	adiw	r24, 0x03	; 3
 8d0:	e2 fe       	sbrs	r14, 2
 8d2:	0b c0       	rjmp	.+22     	; 0x8ea <__DATA_REGION_LENGTH__+0xea>
 8d4:	39 e4       	ldi	r19, 0x49	; 73
 8d6:	d6 01       	movw	r26, r12
 8d8:	3c 93       	st	X, r19
 8da:	3e e4       	ldi	r19, 0x4E	; 78
 8dc:	11 96       	adiw	r26, 0x01	; 1
 8de:	3c 93       	st	X, r19
 8e0:	11 97       	sbiw	r26, 0x01	; 1
 8e2:	36 e4       	ldi	r19, 0x46	; 70
 8e4:	12 96       	adiw	r26, 0x02	; 2
 8e6:	3c 93       	st	X, r19
 8e8:	07 c0       	rjmp	.+14     	; 0x8f8 <__DATA_REGION_LENGTH__+0xf8>
 8ea:	39 e6       	ldi	r19, 0x69	; 105
 8ec:	f6 01       	movw	r30, r12
 8ee:	30 83       	st	Z, r19
 8f0:	3e e6       	ldi	r19, 0x6E	; 110
 8f2:	31 83       	std	Z+1, r19	; 0x01
 8f4:	36 e6       	ldi	r19, 0x66	; 102
 8f6:	32 83       	std	Z+2, r19	; 0x02
 8f8:	fc 01       	movw	r30, r24
 8fa:	32 2f       	mov	r19, r18
 8fc:	40 e2       	ldi	r20, 0x20	; 32
 8fe:	33 23       	and	r19, r19
 900:	19 f0       	breq	.+6      	; 0x908 <__stack+0x9>
 902:	41 93       	st	Z+, r20
 904:	31 50       	subi	r19, 0x01	; 1
 906:	fb cf       	rjmp	.-10     	; 0x8fe <__DATA_REGION_LENGTH__+0xfe>
 908:	fc 01       	movw	r30, r24
 90a:	e2 0f       	add	r30, r18
 90c:	f1 1d       	adc	r31, r1
 90e:	10 82       	st	Z, r1
 910:	8e ef       	ldi	r24, 0xFE	; 254
 912:	9f ef       	ldi	r25, 0xFF	; 255
 914:	a6 c0       	rjmp	.+332    	; 0xa62 <__stack+0x163>
 916:	21 e0       	ldi	r18, 0x01	; 1
 918:	30 e0       	ldi	r19, 0x00	; 0
 91a:	91 11       	cpse	r25, r1
 91c:	02 c0       	rjmp	.+4      	; 0x922 <__stack+0x23>
 91e:	20 e0       	ldi	r18, 0x00	; 0
 920:	30 e0       	ldi	r19, 0x00	; 0
 922:	16 16       	cp	r1, r22
 924:	17 06       	cpc	r1, r23
 926:	1c f4       	brge	.+6      	; 0x92e <__stack+0x2f>
 928:	fb 01       	movw	r30, r22
 92a:	31 96       	adiw	r30, 0x01	; 1
 92c:	02 c0       	rjmp	.+4      	; 0x932 <__stack+0x33>
 92e:	e1 e0       	ldi	r30, 0x01	; 1
 930:	f0 e0       	ldi	r31, 0x00	; 0
 932:	2e 0f       	add	r18, r30
 934:	3f 1f       	adc	r19, r31
 936:	bb 20       	and	r11, r11
 938:	21 f0       	breq	.+8      	; 0x942 <__stack+0x43>
 93a:	eb 2d       	mov	r30, r11
 93c:	f0 e0       	ldi	r31, 0x00	; 0
 93e:	31 96       	adiw	r30, 0x01	; 1
 940:	02 c0       	rjmp	.+4      	; 0x946 <__stack+0x47>
 942:	e0 e0       	ldi	r30, 0x00	; 0
 944:	f0 e0       	ldi	r31, 0x00	; 0
 946:	2e 0f       	add	r18, r30
 948:	3f 1f       	adc	r19, r31
 94a:	e1 2f       	mov	r30, r17
 94c:	f0 e0       	ldi	r31, 0x00	; 0
 94e:	2e 17       	cp	r18, r30
 950:	3f 07       	cpc	r19, r31
 952:	1c f4       	brge	.+6      	; 0x95a <__stack+0x5b>
 954:	12 1b       	sub	r17, r18
 956:	21 2f       	mov	r18, r17
 958:	01 c0       	rjmp	.+2      	; 0x95c <__stack+0x5d>
 95a:	20 e0       	ldi	r18, 0x00	; 0
 95c:	8e 2d       	mov	r24, r14
 95e:	88 71       	andi	r24, 0x18	; 24
 960:	59 f4       	brne	.+22     	; 0x978 <__stack+0x79>
 962:	f6 01       	movw	r30, r12
 964:	82 2f       	mov	r24, r18
 966:	30 e2       	ldi	r19, 0x20	; 32
 968:	88 23       	and	r24, r24
 96a:	19 f0       	breq	.+6      	; 0x972 <__stack+0x73>
 96c:	31 93       	st	Z+, r19
 96e:	81 50       	subi	r24, 0x01	; 1
 970:	fb cf       	rjmp	.-10     	; 0x968 <__stack+0x69>
 972:	c2 0e       	add	r12, r18
 974:	d1 1c       	adc	r13, r1
 976:	20 e0       	ldi	r18, 0x00	; 0
 978:	99 23       	and	r25, r25
 97a:	29 f0       	breq	.+10     	; 0x986 <__stack+0x87>
 97c:	d6 01       	movw	r26, r12
 97e:	9c 93       	st	X, r25
 980:	f6 01       	movw	r30, r12
 982:	31 96       	adiw	r30, 0x01	; 1
 984:	6f 01       	movw	r12, r30
 986:	51 11       	cpse	r21, r1
 988:	0b c0       	rjmp	.+22     	; 0x9a0 <__stack+0xa1>
 98a:	f6 01       	movw	r30, r12
 98c:	82 2f       	mov	r24, r18
 98e:	90 e3       	ldi	r25, 0x30	; 48
 990:	88 23       	and	r24, r24
 992:	19 f0       	breq	.+6      	; 0x99a <__stack+0x9b>
 994:	91 93       	st	Z+, r25
 996:	81 50       	subi	r24, 0x01	; 1
 998:	fb cf       	rjmp	.-10     	; 0x990 <__stack+0x91>
 99a:	c2 0e       	add	r12, r18
 99c:	d1 1c       	adc	r13, r1
 99e:	20 e0       	ldi	r18, 0x00	; 0
 9a0:	0f 2d       	mov	r16, r15
 9a2:	06 0f       	add	r16, r22
 9a4:	9a 81       	ldd	r25, Y+2	; 0x02
 9a6:	34 2f       	mov	r19, r20
 9a8:	30 71       	andi	r19, 0x10	; 16
 9aa:	44 ff       	sbrs	r20, 4
 9ac:	03 c0       	rjmp	.+6      	; 0x9b4 <__stack+0xb5>
 9ae:	91 33       	cpi	r25, 0x31	; 49
 9b0:	09 f4       	brne	.+2      	; 0x9b4 <__stack+0xb5>
 9b2:	01 50       	subi	r16, 0x01	; 1
 9b4:	10 16       	cp	r1, r16
 9b6:	24 f4       	brge	.+8      	; 0x9c0 <__stack+0xc1>
 9b8:	09 30       	cpi	r16, 0x09	; 9
 9ba:	18 f0       	brcs	.+6      	; 0x9c2 <__stack+0xc3>
 9bc:	08 e0       	ldi	r16, 0x08	; 8
 9be:	01 c0       	rjmp	.+2      	; 0x9c2 <__stack+0xc3>
 9c0:	01 e0       	ldi	r16, 0x01	; 1
 9c2:	ab 01       	movw	r20, r22
 9c4:	77 ff       	sbrs	r23, 7
 9c6:	02 c0       	rjmp	.+4      	; 0x9cc <__stack+0xcd>
 9c8:	40 e0       	ldi	r20, 0x00	; 0
 9ca:	50 e0       	ldi	r21, 0x00	; 0
 9cc:	fb 01       	movw	r30, r22
 9ce:	e4 1b       	sub	r30, r20
 9d0:	f5 0b       	sbc	r31, r21
 9d2:	a1 e0       	ldi	r26, 0x01	; 1
 9d4:	b0 e0       	ldi	r27, 0x00	; 0
 9d6:	ac 0f       	add	r26, r28
 9d8:	bd 1f       	adc	r27, r29
 9da:	ea 0f       	add	r30, r26
 9dc:	fb 1f       	adc	r31, r27
 9de:	8e e2       	ldi	r24, 0x2E	; 46
 9e0:	a8 2e       	mov	r10, r24
 9e2:	4b 01       	movw	r8, r22
 9e4:	80 1a       	sub	r8, r16
 9e6:	91 08       	sbc	r9, r1
 9e8:	0b 2d       	mov	r16, r11
 9ea:	10 e0       	ldi	r17, 0x00	; 0
 9ec:	11 95       	neg	r17
 9ee:	01 95       	neg	r16
 9f0:	11 09       	sbc	r17, r1
 9f2:	4f 3f       	cpi	r20, 0xFF	; 255
 9f4:	bf ef       	ldi	r27, 0xFF	; 255
 9f6:	5b 07       	cpc	r21, r27
 9f8:	21 f4       	brne	.+8      	; 0xa02 <__stack+0x103>
 9fa:	d6 01       	movw	r26, r12
 9fc:	ac 92       	st	X, r10
 9fe:	11 96       	adiw	r26, 0x01	; 1
 a00:	6d 01       	movw	r12, r26
 a02:	64 17       	cp	r22, r20
 a04:	75 07       	cpc	r23, r21
 a06:	2c f0       	brlt	.+10     	; 0xa12 <__stack+0x113>
 a08:	84 16       	cp	r8, r20
 a0a:	95 06       	cpc	r9, r21
 a0c:	14 f4       	brge	.+4      	; 0xa12 <__stack+0x113>
 a0e:	81 81       	ldd	r24, Z+1	; 0x01
 a10:	01 c0       	rjmp	.+2      	; 0xa14 <__stack+0x115>
 a12:	80 e3       	ldi	r24, 0x30	; 48
 a14:	41 50       	subi	r20, 0x01	; 1
 a16:	51 09       	sbc	r21, r1
 a18:	31 96       	adiw	r30, 0x01	; 1
 a1a:	d6 01       	movw	r26, r12
 a1c:	11 96       	adiw	r26, 0x01	; 1
 a1e:	7d 01       	movw	r14, r26
 a20:	40 17       	cp	r20, r16
 a22:	51 07       	cpc	r21, r17
 a24:	24 f0       	brlt	.+8      	; 0xa2e <__stack+0x12f>
 a26:	d6 01       	movw	r26, r12
 a28:	8c 93       	st	X, r24
 a2a:	67 01       	movw	r12, r14
 a2c:	e2 cf       	rjmp	.-60     	; 0x9f2 <__stack+0xf3>
 a2e:	64 17       	cp	r22, r20
 a30:	75 07       	cpc	r23, r21
 a32:	39 f4       	brne	.+14     	; 0xa42 <__stack+0x143>
 a34:	96 33       	cpi	r25, 0x36	; 54
 a36:	20 f4       	brcc	.+8      	; 0xa40 <__stack+0x141>
 a38:	95 33       	cpi	r25, 0x35	; 53
 a3a:	19 f4       	brne	.+6      	; 0xa42 <__stack+0x143>
 a3c:	31 11       	cpse	r19, r1
 a3e:	01 c0       	rjmp	.+2      	; 0xa42 <__stack+0x143>
 a40:	81 e3       	ldi	r24, 0x31	; 49
 a42:	f6 01       	movw	r30, r12
 a44:	80 83       	st	Z, r24
 a46:	f7 01       	movw	r30, r14
 a48:	82 2f       	mov	r24, r18
 a4a:	90 e2       	ldi	r25, 0x20	; 32
 a4c:	88 23       	and	r24, r24
 a4e:	19 f0       	breq	.+6      	; 0xa56 <__stack+0x157>
 a50:	91 93       	st	Z+, r25
 a52:	81 50       	subi	r24, 0x01	; 1
 a54:	fb cf       	rjmp	.-10     	; 0xa4c <__stack+0x14d>
 a56:	f7 01       	movw	r30, r14
 a58:	e2 0f       	add	r30, r18
 a5a:	f1 1d       	adc	r31, r1
 a5c:	10 82       	st	Z, r1
 a5e:	80 e0       	ldi	r24, 0x00	; 0
 a60:	90 e0       	ldi	r25, 0x00	; 0
 a62:	29 96       	adiw	r28, 0x09	; 9
 a64:	ec e0       	ldi	r30, 0x0C	; 12
 a66:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__epilogue_restores__+0xc>

00000a6a <__ftoa_engine>:
 a6a:	28 30       	cpi	r18, 0x08	; 8
 a6c:	08 f0       	brcs	.+2      	; 0xa70 <__ftoa_engine+0x6>
 a6e:	27 e0       	ldi	r18, 0x07	; 7
 a70:	33 27       	eor	r19, r19
 a72:	da 01       	movw	r26, r20
 a74:	99 0f       	add	r25, r25
 a76:	31 1d       	adc	r19, r1
 a78:	87 fd       	sbrc	r24, 7
 a7a:	91 60       	ori	r25, 0x01	; 1
 a7c:	00 96       	adiw	r24, 0x00	; 0
 a7e:	61 05       	cpc	r22, r1
 a80:	71 05       	cpc	r23, r1
 a82:	39 f4       	brne	.+14     	; 0xa92 <__ftoa_engine+0x28>
 a84:	32 60       	ori	r19, 0x02	; 2
 a86:	2e 5f       	subi	r18, 0xFE	; 254
 a88:	3d 93       	st	X+, r19
 a8a:	30 e3       	ldi	r19, 0x30	; 48
 a8c:	2a 95       	dec	r18
 a8e:	e1 f7       	brne	.-8      	; 0xa88 <__ftoa_engine+0x1e>
 a90:	08 95       	ret
 a92:	9f 3f       	cpi	r25, 0xFF	; 255
 a94:	30 f0       	brcs	.+12     	; 0xaa2 <__ftoa_engine+0x38>
 a96:	80 38       	cpi	r24, 0x80	; 128
 a98:	71 05       	cpc	r23, r1
 a9a:	61 05       	cpc	r22, r1
 a9c:	09 f0       	breq	.+2      	; 0xaa0 <__ftoa_engine+0x36>
 a9e:	3c 5f       	subi	r19, 0xFC	; 252
 aa0:	3c 5f       	subi	r19, 0xFC	; 252
 aa2:	3d 93       	st	X+, r19
 aa4:	91 30       	cpi	r25, 0x01	; 1
 aa6:	08 f0       	brcs	.+2      	; 0xaaa <__ftoa_engine+0x40>
 aa8:	80 68       	ori	r24, 0x80	; 128
 aaa:	91 1d       	adc	r25, r1
 aac:	df 93       	push	r29
 aae:	cf 93       	push	r28
 ab0:	1f 93       	push	r17
 ab2:	0f 93       	push	r16
 ab4:	ff 92       	push	r15
 ab6:	ef 92       	push	r14
 ab8:	19 2f       	mov	r17, r25
 aba:	98 7f       	andi	r25, 0xF8	; 248
 abc:	96 95       	lsr	r25
 abe:	e9 2f       	mov	r30, r25
 ac0:	96 95       	lsr	r25
 ac2:	96 95       	lsr	r25
 ac4:	e9 0f       	add	r30, r25
 ac6:	ff 27       	eor	r31, r31
 ac8:	ee 53       	subi	r30, 0x3E	; 62
 aca:	ff 4f       	sbci	r31, 0xFF	; 255
 acc:	99 27       	eor	r25, r25
 ace:	33 27       	eor	r19, r19
 ad0:	ee 24       	eor	r14, r14
 ad2:	ff 24       	eor	r15, r15
 ad4:	a7 01       	movw	r20, r14
 ad6:	e7 01       	movw	r28, r14
 ad8:	05 90       	lpm	r0, Z+
 ada:	08 94       	sec
 adc:	07 94       	ror	r0
 ade:	28 f4       	brcc	.+10     	; 0xaea <__ftoa_engine+0x80>
 ae0:	36 0f       	add	r19, r22
 ae2:	e7 1e       	adc	r14, r23
 ae4:	f8 1e       	adc	r15, r24
 ae6:	49 1f       	adc	r20, r25
 ae8:	51 1d       	adc	r21, r1
 aea:	66 0f       	add	r22, r22
 aec:	77 1f       	adc	r23, r23
 aee:	88 1f       	adc	r24, r24
 af0:	99 1f       	adc	r25, r25
 af2:	06 94       	lsr	r0
 af4:	a1 f7       	brne	.-24     	; 0xade <__ftoa_engine+0x74>
 af6:	05 90       	lpm	r0, Z+
 af8:	07 94       	ror	r0
 afa:	28 f4       	brcc	.+10     	; 0xb06 <__ftoa_engine+0x9c>
 afc:	e7 0e       	add	r14, r23
 afe:	f8 1e       	adc	r15, r24
 b00:	49 1f       	adc	r20, r25
 b02:	56 1f       	adc	r21, r22
 b04:	c1 1d       	adc	r28, r1
 b06:	77 0f       	add	r23, r23
 b08:	88 1f       	adc	r24, r24
 b0a:	99 1f       	adc	r25, r25
 b0c:	66 1f       	adc	r22, r22
 b0e:	06 94       	lsr	r0
 b10:	a1 f7       	brne	.-24     	; 0xafa <__ftoa_engine+0x90>
 b12:	05 90       	lpm	r0, Z+
 b14:	07 94       	ror	r0
 b16:	28 f4       	brcc	.+10     	; 0xb22 <__ftoa_engine+0xb8>
 b18:	f8 0e       	add	r15, r24
 b1a:	49 1f       	adc	r20, r25
 b1c:	56 1f       	adc	r21, r22
 b1e:	c7 1f       	adc	r28, r23
 b20:	d1 1d       	adc	r29, r1
 b22:	88 0f       	add	r24, r24
 b24:	99 1f       	adc	r25, r25
 b26:	66 1f       	adc	r22, r22
 b28:	77 1f       	adc	r23, r23
 b2a:	06 94       	lsr	r0
 b2c:	a1 f7       	brne	.-24     	; 0xb16 <__ftoa_engine+0xac>
 b2e:	05 90       	lpm	r0, Z+
 b30:	07 94       	ror	r0
 b32:	20 f4       	brcc	.+8      	; 0xb3c <__ftoa_engine+0xd2>
 b34:	49 0f       	add	r20, r25
 b36:	56 1f       	adc	r21, r22
 b38:	c7 1f       	adc	r28, r23
 b3a:	d8 1f       	adc	r29, r24
 b3c:	99 0f       	add	r25, r25
 b3e:	66 1f       	adc	r22, r22
 b40:	77 1f       	adc	r23, r23
 b42:	88 1f       	adc	r24, r24
 b44:	06 94       	lsr	r0
 b46:	a9 f7       	brne	.-22     	; 0xb32 <__ftoa_engine+0xc8>
 b48:	84 91       	lpm	r24, Z
 b4a:	10 95       	com	r17
 b4c:	17 70       	andi	r17, 0x07	; 7
 b4e:	41 f0       	breq	.+16     	; 0xb60 <__ftoa_engine+0xf6>
 b50:	d6 95       	lsr	r29
 b52:	c7 95       	ror	r28
 b54:	57 95       	ror	r21
 b56:	47 95       	ror	r20
 b58:	f7 94       	ror	r15
 b5a:	e7 94       	ror	r14
 b5c:	1a 95       	dec	r17
 b5e:	c1 f7       	brne	.-16     	; 0xb50 <__ftoa_engine+0xe6>
 b60:	e8 e6       	ldi	r30, 0x68	; 104
 b62:	f0 e0       	ldi	r31, 0x00	; 0
 b64:	68 94       	set
 b66:	15 90       	lpm	r1, Z+
 b68:	15 91       	lpm	r17, Z+
 b6a:	35 91       	lpm	r19, Z+
 b6c:	65 91       	lpm	r22, Z+
 b6e:	95 91       	lpm	r25, Z+
 b70:	05 90       	lpm	r0, Z+
 b72:	7f e2       	ldi	r23, 0x2F	; 47
 b74:	73 95       	inc	r23
 b76:	e1 18       	sub	r14, r1
 b78:	f1 0a       	sbc	r15, r17
 b7a:	43 0b       	sbc	r20, r19
 b7c:	56 0b       	sbc	r21, r22
 b7e:	c9 0b       	sbc	r28, r25
 b80:	d0 09       	sbc	r29, r0
 b82:	c0 f7       	brcc	.-16     	; 0xb74 <__ftoa_engine+0x10a>
 b84:	e1 0c       	add	r14, r1
 b86:	f1 1e       	adc	r15, r17
 b88:	43 1f       	adc	r20, r19
 b8a:	56 1f       	adc	r21, r22
 b8c:	c9 1f       	adc	r28, r25
 b8e:	d0 1d       	adc	r29, r0
 b90:	7e f4       	brtc	.+30     	; 0xbb0 <__ftoa_engine+0x146>
 b92:	70 33       	cpi	r23, 0x30	; 48
 b94:	11 f4       	brne	.+4      	; 0xb9a <__ftoa_engine+0x130>
 b96:	8a 95       	dec	r24
 b98:	e6 cf       	rjmp	.-52     	; 0xb66 <__ftoa_engine+0xfc>
 b9a:	e8 94       	clt
 b9c:	01 50       	subi	r16, 0x01	; 1
 b9e:	30 f0       	brcs	.+12     	; 0xbac <__ftoa_engine+0x142>
 ba0:	08 0f       	add	r16, r24
 ba2:	0a f4       	brpl	.+2      	; 0xba6 <__ftoa_engine+0x13c>
 ba4:	00 27       	eor	r16, r16
 ba6:	02 17       	cp	r16, r18
 ba8:	08 f4       	brcc	.+2      	; 0xbac <__ftoa_engine+0x142>
 baa:	20 2f       	mov	r18, r16
 bac:	23 95       	inc	r18
 bae:	02 2f       	mov	r16, r18
 bb0:	7a 33       	cpi	r23, 0x3A	; 58
 bb2:	28 f0       	brcs	.+10     	; 0xbbe <__ftoa_engine+0x154>
 bb4:	79 e3       	ldi	r23, 0x39	; 57
 bb6:	7d 93       	st	X+, r23
 bb8:	2a 95       	dec	r18
 bba:	e9 f7       	brne	.-6      	; 0xbb6 <__ftoa_engine+0x14c>
 bbc:	10 c0       	rjmp	.+32     	; 0xbde <__ftoa_engine+0x174>
 bbe:	7d 93       	st	X+, r23
 bc0:	2a 95       	dec	r18
 bc2:	89 f6       	brne	.-94     	; 0xb66 <__ftoa_engine+0xfc>
 bc4:	06 94       	lsr	r0
 bc6:	97 95       	ror	r25
 bc8:	67 95       	ror	r22
 bca:	37 95       	ror	r19
 bcc:	17 95       	ror	r17
 bce:	17 94       	ror	r1
 bd0:	e1 18       	sub	r14, r1
 bd2:	f1 0a       	sbc	r15, r17
 bd4:	43 0b       	sbc	r20, r19
 bd6:	56 0b       	sbc	r21, r22
 bd8:	c9 0b       	sbc	r28, r25
 bda:	d0 09       	sbc	r29, r0
 bdc:	98 f0       	brcs	.+38     	; 0xc04 <__ftoa_engine+0x19a>
 bde:	23 95       	inc	r18
 be0:	7e 91       	ld	r23, -X
 be2:	73 95       	inc	r23
 be4:	7a 33       	cpi	r23, 0x3A	; 58
 be6:	08 f0       	brcs	.+2      	; 0xbea <__ftoa_engine+0x180>
 be8:	70 e3       	ldi	r23, 0x30	; 48
 bea:	7c 93       	st	X, r23
 bec:	20 13       	cpse	r18, r16
 bee:	b8 f7       	brcc	.-18     	; 0xbde <__ftoa_engine+0x174>
 bf0:	7e 91       	ld	r23, -X
 bf2:	70 61       	ori	r23, 0x10	; 16
 bf4:	7d 93       	st	X+, r23
 bf6:	30 f0       	brcs	.+12     	; 0xc04 <__ftoa_engine+0x19a>
 bf8:	83 95       	inc	r24
 bfa:	71 e3       	ldi	r23, 0x31	; 49
 bfc:	7d 93       	st	X+, r23
 bfe:	70 e3       	ldi	r23, 0x30	; 48
 c00:	2a 95       	dec	r18
 c02:	e1 f7       	brne	.-8      	; 0xbfc <__ftoa_engine+0x192>
 c04:	11 24       	eor	r1, r1
 c06:	ef 90       	pop	r14
 c08:	ff 90       	pop	r15
 c0a:	0f 91       	pop	r16
 c0c:	1f 91       	pop	r17
 c0e:	cf 91       	pop	r28
 c10:	df 91       	pop	r29
 c12:	99 27       	eor	r25, r25
 c14:	87 fd       	sbrc	r24, 7
 c16:	90 95       	com	r25
 c18:	08 95       	ret

00000c1a <__prologue_saves__>:
 c1a:	2f 92       	push	r2
 c1c:	3f 92       	push	r3
 c1e:	4f 92       	push	r4
 c20:	5f 92       	push	r5
 c22:	6f 92       	push	r6
 c24:	7f 92       	push	r7
 c26:	8f 92       	push	r8
 c28:	9f 92       	push	r9
 c2a:	af 92       	push	r10
 c2c:	bf 92       	push	r11
 c2e:	cf 92       	push	r12
 c30:	df 92       	push	r13
 c32:	ef 92       	push	r14
 c34:	ff 92       	push	r15
 c36:	0f 93       	push	r16
 c38:	1f 93       	push	r17
 c3a:	cf 93       	push	r28
 c3c:	df 93       	push	r29
 c3e:	cd b7       	in	r28, 0x3d	; 61
 c40:	de b7       	in	r29, 0x3e	; 62
 c42:	ca 1b       	sub	r28, r26
 c44:	db 0b       	sbc	r29, r27
 c46:	0f b6       	in	r0, 0x3f	; 63
 c48:	f8 94       	cli
 c4a:	de bf       	out	0x3e, r29	; 62
 c4c:	0f be       	out	0x3f, r0	; 63
 c4e:	cd bf       	out	0x3d, r28	; 61
 c50:	09 94       	ijmp

00000c52 <__epilogue_restores__>:
 c52:	2a 88       	ldd	r2, Y+18	; 0x12
 c54:	39 88       	ldd	r3, Y+17	; 0x11
 c56:	48 88       	ldd	r4, Y+16	; 0x10
 c58:	5f 84       	ldd	r5, Y+15	; 0x0f
 c5a:	6e 84       	ldd	r6, Y+14	; 0x0e
 c5c:	7d 84       	ldd	r7, Y+13	; 0x0d
 c5e:	8c 84       	ldd	r8, Y+12	; 0x0c
 c60:	9b 84       	ldd	r9, Y+11	; 0x0b
 c62:	aa 84       	ldd	r10, Y+10	; 0x0a
 c64:	b9 84       	ldd	r11, Y+9	; 0x09
 c66:	c8 84       	ldd	r12, Y+8	; 0x08
 c68:	df 80       	ldd	r13, Y+7	; 0x07
 c6a:	ee 80       	ldd	r14, Y+6	; 0x06
 c6c:	fd 80       	ldd	r15, Y+5	; 0x05
 c6e:	0c 81       	ldd	r16, Y+4	; 0x04
 c70:	1b 81       	ldd	r17, Y+3	; 0x03
 c72:	aa 81       	ldd	r26, Y+2	; 0x02
 c74:	b9 81       	ldd	r27, Y+1	; 0x01
 c76:	ce 0f       	add	r28, r30
 c78:	d1 1d       	adc	r29, r1
 c7a:	0f b6       	in	r0, 0x3f	; 63
 c7c:	f8 94       	cli
 c7e:	de bf       	out	0x3e, r29	; 62
 c80:	0f be       	out	0x3f, r0	; 63
 c82:	cd bf       	out	0x3d, r28	; 61
 c84:	ed 01       	movw	r28, r26
 c86:	08 95       	ret

00000c88 <_exit>:
 c88:	f8 94       	cli

00000c8a <__stop_program>:
 c8a:	ff cf       	rjmp	.-2      	; 0xc8a <__stop_program>
